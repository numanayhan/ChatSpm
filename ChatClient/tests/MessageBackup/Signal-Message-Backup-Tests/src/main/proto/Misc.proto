syntax = "proto3";

package signal.backup;

option java_package = "org.thoughtcrime.securesms.backup.v2.proto.misc";

message Receipt {
  // Public key of the TxOut.
  CompressedRistretto public_key = 1;

  // Confirmation number of the TxOut.
  TxOutConfirmationNumber confirmation = 2;

  // Tombstone block of the Tx that produced the TxOut.
  // Note: This value is self-reported by the sender and is unverifiable.
  uint64 tombstone_block = 3;

  // Amount of the TxOut.
  // Note: This value is self-reported by the sender and is unverifiable.
  oneof masked_amount {
    MaskedAmount masked_amount_v1 = 4;
    MaskedAmount masked_amount_v2 = 5;
  };
}

/// A 32-byte compressed Ristretto curve point (public key)
message CompressedRistretto {
  bytes data = 1;
}

// A hash of the shared secret of a transaction output.
//
// Can be used by the recipient of a transaction output to verify that the
// bearer of this number knew the shared secret of the transaction output,
// thereby providing evidence that they are the sender.
message TxOutConfirmationNumber {
  bytes hash = 1;
}

// MaskedAmount.
message MaskedAmount {
  // A Pedersen commitment `v*G + s*H`
  CompressedRistretto commitment = 1;

  // `masked_value = value XOR_8 Blake2B("value_mask" || shared_secret)`
  fixed64 masked_value = 2;

  // `masked_token_id = token_id XOR_8 Blake2B("token_id_mask" || shared_secret)`
  bytes masked_token_id = 3;
}